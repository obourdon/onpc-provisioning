### Localization
# Preseeding only locale sets language, country and locale.
d-i debian-installer/locale string en_US.UTF-8
d-i debian-installer/language string en

# Keyboard selection.
# Disable automatic (interactive) keymap detection.
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string us

### Network configuration
# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

# Just in case our DHCP server is busy.
d-i netcfg/dhcp_timeout string 30

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
# The following are not set so as to be passed as argument to boot
#d-i netcfg/get_hostname string master
#d-i netcfg/get_domain string vagrantup.com

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string

### Mirror settings
# Alternatively: by default, the installer uses CC.archive.ubuntu.com where
# CC is the ISO-3166-2 code for the selected country. You can preseed this
# so that it does so without asking.
d-i mirror/country string FR
d-i mirror/http/countries select FR
d-i mirror/http/hostname string fr.archive.ubuntu.com
d-i mirror/http/mirror select fr.archive.ubuntu.com
# The following are not set so as to be passed as argument to boot
#d-i mirror/http/proxy string
#d-i mirror/http/proxy string http://192.168.0.1:8080/
#d-i mirror/http/proxy string http://172.20.20.56:8080/

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string Europe/Paris

# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true

### Partitioning
# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
#
# set disk to 1st disk entry
# remove existing LVM and MBR infos
# prevent apt-get clean to run so as to keep downloaded packages in /var/cache/apt
d-i partman/early_command string disk="$(list-devices disk | head -n 1)" \
	; debconf-set partman-auto/disk "$disk" \
	; pvremove -y -ff "$disk"* || true \
	; dd if=/dev/zero of=$disk bs=1k count=1 || true \
	; sed -i -e 's?^chroot /target apt-get clean?#chroot /target apt-get clean?' /var/lib/dpkg/info/pkgsel.postinst \
	; sed -i -e 's?^chroot /target apt-get clean?#chroot /target apt-get clean?' /usr/lib/finish-install.d/60cleanup
#d-i partman-auto/disk string /dev/sda

# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string lvm

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/device_remove_lvm_span boolean true
d-i partman-auto/purge_lvm_from_device boolean true
# The same applies to pre-existing software RAID array:
#d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean false
d-i partman-lvm/confirm_nooverwrite boolean true

# For LVM partitioning, you can select how much of the volume group to use
# for logical volumes.
d-i partman-auto-lvm/guided_size string max

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /usr, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# If you just want to change the default filesystem from ext3 to something
# else, you can do that without providing a full recipe.
d-i partman/default_filesystem string ext4
d-i partman-auto-lvm/new_vg_name string xenial

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# custom partitioning
d-i partman-auto/choose_recipe select boot-root
d-i partman-auto/expert_recipe string				\
	boot-root ::						\
		40 500 500 ext4					\
			$primary{ }				\
			$bootable{ }				\
			method{ format } format{ }		\
			use_filesystem{ } filesystem{ ext4 }	\
			mountpoint{ /boot }			\
		.						\
		256 2000 100% linux-swap			\
			$lvmok{ }				\
			method{ swap } format{ }		\
		.						\
		500 1000 1500 ext4				\
			$lvmok{ }				\
			method{ format } format{ }		\
			use_filesystem{ } filesystem{ ext4 }	\
			mountpoint{ /home }			\
		.						\
		2000 3000 4000 ext4				\
			$lvmok{ }				\
			method{ format } format{ }		\
			use_filesystem{ } filesystem{ ext4 }	\
			mountpoint{ /var }			\
		.						\
		2000 10000 -1 ext4				\
			$lvmok{ }				\
			method{ format } format{ }		\
			use_filesystem{ } filesystem{ ext4 }	\
			mountpoint{ / }				\
		.

### Base system installation
### Account setup

# To create a normal user account.
d-i passwd/user-fullname string vagrant
d-i passwd/username string vagrant
# The following are not set so as to be passed as argument to boot
#d-i passwd/user-password password mypassword
#d-i passwd/user-password-again password mypassword
#d-i passwd/user-password-crypted password $6$iMULDoSdYEtlb$oMrfrQPu78Tufp9T8f17iAwpnyqUhIbRheX2yL6XsWS.eguJnZ0i33FTtRIhWljBvRhMSCkFYPuHRQU0et5UW/

# The installer will warn about weak passwords. If you are sure you know
# what you're doing and want to override it, uncomment this.
d-i user-setup/allow-password-weak boolean true

# Set to true if you want to encrypt the first user's home directory.
d-i user-setup/encrypt-home boolean false

### Apt setup
# You can choose to install restricted and universe software, or to install
# software from the backports repository.
#d-i apt-setup/restricted boolean true
#d-i apt-setup/universe boolean true
#d-i apt-setup/backports boolean true
# Uncomment this if you don't want to use a network mirror.
#d-i apt-setup/use_mirror boolean false
# Select which update services to use; define the mirrors to be used.
# Values shown below are the normal defaults.
#d-i apt-setup/services-select multiselect security
#d-i apt-setup/security_host string security.ubuntu.com
#d-i apt-setup/security_path string /ubuntu

# Additional repositories, local[0-9] available
d-i apt-setup/local0/repository string \
	deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main
d-i apt-setup/local0/comment string ansible for Ubuntu Xenial
# Enable deb-src lines
#d-i apt-setup/local0/source boolean true
# URL to the public key of the local repository; you must provide a key or
# apt will complain about the unauthenticated repository and so the
# sources.list line will be left commented out
d-i apt-setup/local0/key string http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x93C4A3FD7BB9C367

### Package selection
#tasksel tasksel/force-tasks string server
#tasksel tasksel/first multiselect standard system utilities, OpenSSH server
tasksel tasksel/first multiselect standard
# Individual additional packages to install
d-i pkgsel/include string openssh-server python-selinux \
	software-properties-common ansible unzip \
	git aptitude build-essential ntp ntpdate python-dev virtualenv python-virtualenv \
	byobu tmate tmux screen tshark virt-what \
	bridge-utils debootstrap ifenslave ifenslave-2.6 vlan \
	acl acpid apport at btrfs-tools squashfs-tools \
	cryptsetup dnsmasq-base eatmydata gawk gdisk \
	linux-virtual lxd mdadm open-iscsi open-vm-tools overlayroot \
	pastebinit pollinate sosreport ubuntu-core-launcher \
	ubuntu-cloudimage-keyring ubuntu-server vim tree \
	arpwatch iftop slurm iptraf nethogs nmon nload tcptrack bwm-ng cbm \
	speedometer pktstat netdiag ifstat dstat saidar \
	atop htop ctop iotop itop sysstat ioping
#	glances
#	cloud-init cloud-initram*
#	apache2 ilibapache2-mod-gnutls dnsmasq squid
#	squid-deb-proxy squid-deb-proxy-client
#	apt-cacher-ng
# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
#d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/upgrade select safe-upgrade

# Language pack selection
d-i pkgsel/language-packs multiselect

# No language support packages
d-i pkgsel/install-language-support boolean false

# Policy for applying updates. May be "none" (no automatic updates),
# "unattended-upgrades" (install security updates automatically), or
# "landscape" (manage system with Landscape).
d-i pkgsel/update-policy select none

# Verbose output and no boot splash screen
d-i debian-installer/quiet boolean false
d-i debian-installer/splash boolean false

### Boot loader installation

# Grub is the default boot loader (for x86). If you want lilo installed
# instead, uncomment this:
#d-i grub-installer/skip boolean true
# To also skip installing lilo, and install no bootloader, uncomment this
# too:
#d-i lilo-installer/skip boolean true

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if it also finds some other
# OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean false

# Due notably to potential USB sticks, the location of the MBR can not be
# determined safely in general, so this needs to be specified:
#d-i grub-installer/bootdev string /dev/sda
# To install to the first device (assuming it is not a USB stick):
d-i grub-installer/bootdev string default

# Wait for two seconds in grub
d-i grub-installer/timeout string 2

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
d-i debian-installer/add-kernel-opts string vga=normal nomodeset audit=0 intel_idle.max_cstate=0 processor.max_cstate=1 cgroup_enable=memory swapaccount=1

### Finishing up the installation
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean true

#### Advanced options
### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb
# Disable Debian installer from installing hardware specific packages
# Warning: This could break preseeding to some hardware I dont know or care about.
#d-i preseed/early_command string rm /usr/lib/pre-pkgsel.d/20install-hwpackages

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
d-i preseed/late_command string \
	in-target wget -q --output-document=/tmp/postinstall.sh http://www.olivierbourdon.com/post-install-master.sh \
	; in-target cp /tmp/postinstall.sh /root \
	; in-target /bin/bash /tmp/postinstall.sh
