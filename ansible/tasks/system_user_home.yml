# System user home directory configuration task
---
- name: Configuring {{ systemuser }} home
  block:

    - name: "Configuring sudoers for {{ systemuser }}"
      template:
        src: ../templates/sudoers.j2
        dest: /etc/sudoers.d/{{ systemuser }}_user
        owner: root
        group: root
        mode: 0440

    - name: Creating .ssh directory
      file:
        path: "{{ systemuserhome }}/.ssh"
        mode: 0700
        state: directory
        owner: "{{ systemuser }}"
        group: "{{ systemuser }}"

    - name: Creating new SSH key
      user:
        name: "{{ systemuser }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa

    - name: Modifying public SSH key comment
      lineinfile:
        path: "{{ systemuserhome }}/.ssh/id_rsa.pub"
        backrefs: yes
        regexp: '^ssh-rsa (.*) ansible-generated on .*$'
        line: 'ssh-rsa \1 ansible-generated on {{ ansible_fqdn }}'
        state: present
        owner: root
        group: root
        mode: 0644

    - name: Retrieve public SSH key
      fetch:
        src: "{{ systemuserhome }}/.ssh/id_rsa.pub"
        dest: /tmp/id_rsa.pub-{{ systemuser }}-{{ inventory_hostname }}
        flat: yes

    - name: Updating authorized SSH keys
      authorized_key:
        user: "{{ systemuser }}"
        state: present
        key: "{{ item }}"
      environment:
        https_proxy: ""
      with_items:
        - https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub
        - http://www.olivierbourdon.com/ssh-keys
        - "{{ lookup('file', '/tmp/id_rsa.pub-{{ systemuser }}-{{ inventory_hostname }}') }}"

    - name: Configuring SSH defaults
      template:
        src: ../templates/ssh_cfg.j2
        dest: "{{ systemuserhome }}/.ssh/config"
        owner: "{{ systemuser }}"
        group: "{{ systemuser }}"
        mode: 0644
      when: itf is defined

    - name: Creating .cache directory
      file:
        path: "{{ systemuserhome }}/.cache"
        mode: 0700
        state: directory
        owner: "{{ systemuser }}"
        group: "{{ systemuser }}"

    - name: Creating legal removal file
      copy:
        dest: "{{ systemuserhome }}/.cache/motd.legal-displayed"
        mode: 0644
        owner: "{{ systemuser }}"
        group: "{{ systemuser }}"
        content: ""

    - name: Creating login banner removal file
      copy:
        dest: "{{ systemuserhome }}/.sudo_as_admin_successful"
        mode: 0644
        owner: "{{ systemuser }}"
        group: "{{ systemuser }}"
        content: ""

    - name: Creating image partitioning templates
      template:
        src: "{{ item }}.j2"
        dest: "{{ systemuserhome }}/{{ item | basename }}"
        owner: "{{ systemuser }}"
        group: "{{ systemuser }}"
        mode: 0644
      with_items:
        - ../templates/partitioning-std.yml
        - ../templates/partitioning-lvm.yml

    - name: Configuring DIB_DEV_USER_* and DIB_DHCP_TIMEOUT
      lineinfile:
        path: /etc/environment
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        owner: root
        group: root
        mode: 0644
      with_items:
        - { regexp: '^DIB_DEV_USER_USERNAME=.*$', line: 'DIB_DEV_USER_USERNAME="{{ systemuser }}"' }
        - { regexp: '^DIB_DEV_USER_PASSWORD=.*$', line: 'DIB_DEV_USER_PASSWORD="{{ systempasswd }}"' }
        - { regexp: '^DIB_DEV_USER_PWDLESS_SUDO=.*$', line: 'DIB_DEV_USER_PWDLESS_SUDO=true' }
        - { regexp: '^DIB_DEV_USER_AUTHORIZED_KEYS=.*$', line: 'DIB_DEV_USER_AUTHORIZED_KEYS="{{ systemuserhome }}/.ssh/authorized_keys"' }
        - { regexp: '^DIB_DEV_USER_SHELL=.*$', line: 'DIB_DEV_USER_SHELL="/bin/bash"' }
        - { regexp: '^DIB_DHCP_TIMEOUT=.*$', line: 'DIB_DHCP_TIMEOUT={{ dhcptimeout }}' }
