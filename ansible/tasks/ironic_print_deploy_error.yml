# Ironic deployment errors retrieval task
---
# Copyright (c) 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Set facts from input variable
- set_fact:
    ironic_error_msg: "{{ ironic_error | regex_replace('^([^{]*) {.*', '\\1') }}"
    ironic_error_dict: "{{ ironic_error | regex_replace('^[^{]* ({.*)$', '\\1') }}"

# Pretty print strings with \n's converting to list of strings
- set_fact:
    ironic_error_pretty_dict: "{% set sel = {} %}{% for k,v in ironic_error_dict.items() %}{% if v is string %}{% set v1=v.split('\n') %}{% else %}{% set v1=v %}{% endif %}{% set l = sel.update({k: v1}) %}{% endfor %}{{ sel }}"
  when: ironic_error_msg != ironic_error_dict

# Compose final result
- set_fact:
    ironic_error_msg_dict: "{{ {'error': ironic_error_msg } | combine(ironic_error_pretty_dict | default({})) }}"
