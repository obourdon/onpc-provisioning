---
# Copyright (c) 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: infra-master
  become: yes

  vars_files:
    - ../vars/infra-master-configure-system_vars.yml
    - ../vars/infra-master-deploy-bifrost_vars.yml

  pre_tasks:

    - name: Installing Squid proxy package
      package:
        name: squid
        state: latest

    - name: Setting Facts
      set_fact:
        root_ssh_dir: "{{ root_dot_ssh_dir | default('/root/.ssh') }}"
        dest_repo_dir: "{{ dest_github_repo_dir | default('/opt') }}"

    - name: Creating root .ssh
      file:
        path: "{{ root_ssh_dir }}"
        mode: 0700
        owner: "root"
        group: "root"
        state: directory

    - name: Retrieving OpenNext GitHub Repositories
      git:
        repo: "https://github.com/opennext-io/{{ item }}"
        dest: "{{ dest_repo_dir }}/{{ item }}"
        force: yes
        recursive: no
      with_items:
        - "onpc-provisioning"

    - name: Setting up Ansible in virtualenv
      become: no
      pip:
        virtualenv: "{{ systemuserhome }}/.venv/ansible"
        requirements: "{{ dest_repo_dir }}/onpc-provisioning/requirements.txt"

    - name: Setting default facts for Squid ACLs
      set_fact:
        osa_nodes_ips: "{{ hostvars.get(inventory_hostname, {}).get('ansible_local', {}).get('opennext_infra_master_create_osa_nodes', {}).get(inventory_hostname, {}).get('node_ips', []) }}"
        squid_ports_acls:
          - { name: "SSL_ports", type: "port", argument: "22" }
          - { name: "Safe_ports", type: "port", argument: "22" }
        squid_ips_acls:
          - { name: "allowed_ips", type: "src", argument: "{{ ip_prefix | default('20.20.20') }}.0/{{ ip_netmask_bits | default(24) }}" }

    - block:
      - name: Computing baremetal facts for Squid ACLs
        set_fact:
           l_squid_ips_acls: "{% set sel = [] %} {% for x in osa_nodes_ips | to_yaml | from_yaml %} {% set l = sel.append({ 'name': 'allowed_ips', 'type': 'src', 'argument': x }) %}{% endfor %}{{ sel }}"

      - name: Setting baremetal facts for Squid ACLs
        set_fact:
           squid_ips_acls: "{{ [] + l_squid_ips_acls | from_yaml }}"
      when: real_baremetal is defined and real_baremetal | bool == True

  roles:
    - role: kbrebanov.squid
      squid_tcp_outgoing_address: "{{ ansible_default_ipv4.address }}"
      squid_cache_mem: 768
      squid_maximum_object_size: 256
      squid_cache_dir: "/var/spool/squid"
      squid_cache_dir_size: 16384
      squid_acls: "{{ squid_ports_acls + squid_ips_acls }}"
      squid_http_access_allow_clients:
        - localhost
        - allowed_ips
