---
- hosts: localhost
  connection: local

  tasks:

    - import_tasks: ../tasks/system_infos.yml

- hosts: master
  become: yes

  vars_files:
    - ../vars/master-configure-system_vars.yml
    - ../vars/master-pkgs-ubuntu.yml

  tasks:

    - import_tasks: ../tasks/system_infos.yml

    - name: Verifying repositories
      apt_repository:
        repo: ppa:ansible/ansible
        state: present
        filename: 'ansible'
      environment:
        https_proxy: ""

    - name: Verifying all mandatory packages
      package:
        name: "{{ systempkgs | sort }}"
        state: latest

    - name: Storing collision IP addresses list
      set_fact:
        collision_ips: "{{ hostvars['localhost']['local_ips'] | default([]) | intersect(local_ips) }}"

    - name: Computing provisioning master IP address
      set_fact:
        master_ip: '{{ ip_prefix | default("20.20.20") }}.{{ ip_suffix | default(1) }}'

    - name: Checking IP collisions
      fail: msg="Collision in IP addresses {{ collision_ips }}"
      when: collision_ips | length > 0

    - name: Checking duplicate IPs
      fail: msg="ip_prefix and ip_suffix variables lead to {{ ip_prefix }}.{{ ip_suffix }} colliding with {{ hostvars['localhost']['local_ips'] }}"
      when: master_ip in hostvars['localhost']['local_ips']

    - import_tasks: ../tasks/secondary_network_interface.yml

    - import_tasks: ../tasks/select_secondary_network_interface.yml
      vars:
       itf_state: false

    - name: Configuring {{ itfs[0].device }}
      template:
        src: ../templates/itf_cfg.j2
        dest: /etc/network/interfaces.d/{{ itf }}
        owner: root
        group: root
        mode: 0644
      when: itf is defined

    - name: Starting interface {{ itfs[0].device }}
      command: ifup {{ itf }}
      when: itf is defined

    - name: Configuring IP forwarding via sysctl
      sysctl:
        name: "net.ipv4.ip_forward"
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
      when: itf is defined

    - include_tasks: ../tasks/kernel_drivers_modules.yml module={{ item }}
      with_items:
        - "bonding"
        - "8021q"

    - name: Configuring System Wide Proxy
      lineinfile:
        path: /etc/environment
        backrefs: yes
        regexp: '^no_proxy="(.*)"$'
        line: 'no_proxy="\1,{{ ip_prefix | default("20.20.20") }}.0/{{ ip_netmask_bits | default(24) }}"'
        state: present
        owner: root
        group: root
        mode: 0644
      when: itf is defined

    - name: Configuring NTP
      lineinfile:
        path: /etc/ntp.conf
        insertafter: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        owner: root
        group: root
        mode: 0644
      with_items:
        - { regexp: '^#broadcast ', line: 'broadcast {{ ip_prefix | default("20.20.20") }}.{{ ip_netmask_broadcast | default(255) }}' }
      when: itf is defined

    - name: Restarting NTP Service
      service: name=ntp enabled=yes state=restarted
      when: itf is defined

    - name: Cleaning Up Hosts File
      lineinfile:
        path: /etc/hosts
        regexp: "{{ item }}"
        state: absent
        owner: root
        group: root
        mode: 0644
      with_items:
        - '^127.0.1.1\s.*'
        - '^$'
        - '^#.*IPv6.*'
        - '.*::.*'
      notify: Creating Hosts File Template
      when: itf is defined

    - name: Copying Network Hosts Script
      copy:
        src: ../files/network-hosts.sh
        dest: /usr/local/bin/network-hosts.sh
        owner: root
        group: root
        mode: 0755

    - name: Copying Network Hosts Service Config File
      copy:
        src: ../files/network-hosts.service
        dest: /lib/systemd/system/network-hosts.service
        owner: root
        group: root
        mode: 0644
      notify: Restarting Network Hosts Service

    - meta: flush_handlers

    - include_tasks: ../tasks/system_user_home.yml

  handlers:

    - name: Creating Hosts File Template
      copy:
        remote_src: yes
        src: /etc/hosts
        dest: /etc/hosts.tmpl
        owner: root
        group: root
        mode: 0644

    - name: Activating Network Hosts Service
      command: systemctl enable network-hosts.service
      listen: "Restarting Network Hosts Service"

    - name: Running Network Hosts Service
      command: /usr/local/bin/network-hosts.sh
      listen: "Restarting Network Hosts Service"
