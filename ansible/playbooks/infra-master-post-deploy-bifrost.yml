---
- hosts: infra-master
  become: yes

  vars_files:
    - ../vars/infra-master-configure-system_vars.yml
    - ../vars/infra-master-deploy-bifrost_vars.yml

  tasks:

    - name: Retrieving Remote Deploy Informations
      slurp:
        src: "{{ systemuserhome }}/deploy_args.yml"
      register:
        deploy_info

    - name: Setting Facts From Remote Deploy Informations
      set_fact:
        deploy_params: "{{ deploy_info['content'] | b64decode | from_yaml }}"

    - name: Retrieving Remote Ironic Informations
      slurp:
        src: "/etc/ironic/ironic.conf"
      register:
        ironic_info

    - name: Retrieving Remote Cloud Informations
      slurp:
        src: "{{ systemuserhome }}/.config/openstack/clouds.yaml"
      register:
        cloud_info

    - name: Setting Facts From Remote Informations
      set_fact:
        clouds: "{{ cloud_info['content'] | b64decode | from_yaml }}"
        ironic: "{{ ironic_info['content'] | b64decode | regex_search('http_url *= .*') }}"

    - name: Setting Fact For Ironic URL
      set_fact:
        ironic_http_url: "{{ ironic.split(' ')[-1] }}"

    - name: Retrieving IPA informations
      find:
        paths: /httpboot
        follow: yes
        patterns: '^ipa\.(vmlinuz|initramfs)$'
        use_regex: yes
      register: ipa_infos

    - name: Retrieving Deployment Image Informations
      find:
        paths: /httpboot
        follow: yes
        patterns: "^{{ deployimagefilename }}$"
        use_regex: yes
      register: di_infos

    - name: Setting IPA and Deployment Image Informations
      set_fact:
        ipa_files: "{{ ipa_infos.get('files', {}) | selectattr('path', 'defined') | map(attribute='path') | list }}"
        deploy_files: "{{ di_infos.get('files', {}) | selectattr('path', 'defined') | map(attribute='path') | list }}"

    - name: Checking Number Of IPA Files
      fail: msg="Bad number of IPA files {{ ipa_files | length }}"
      when: ipa_files | length != 2

    - name: Checking Number Of Deployment Image Files
      fail: msg="Bad number of Deployment Image Files {{ deploy_files | length }}"
      when: deploy_files | length != 1

    - name: Retrieving QCOW2 Image File Informations
      stat:
        path: "{{ deploy_files[0] }}"
        get_checksum: yes
        checksum_algorithm: "md5"
      register: qcow2_infos

    - name: Setting Facts For Ironic Informations
      set_fact:
        ironic_deploy_kernel: "{{ ironic_http_url }}/ipa.vmlinuz"
        ironic_deploy_ramdisk: "{{ ironic_http_url }}/ipa.initramfs"
        ironic_image_qcow2: "{{ ironic_http_url }}/{{ deploy_files[0] | basename }}"
        ironic_image_checksum: "{{ qcow2_infos.get('stat', {}).get('checksum', '') }}"
        ironic_root_size: 20
#        ironic_root_size: "{{ root_part_size_gb | default(60) }}"

    - set_fact:
        auth: "{{ clouds.get('clouds', {}).get('bifrost-admin', {}).get('auth', {}) }}"
        auth_type: "password"

    - include_tasks: ../tasks/ironic_introspection_rule.yml name={{ item.name }} template={{ item.template }} description={{ item.description }}
      with_items:
        - {
          name: "Generic Introspection Rule",
          template: "../templates/ironic_additional_rule.yaml.j2",
          description: "Add all discovery hardware informations to extra field"
        }
        - {
          name: "Driver Rule",
          template: "../templates/ironic_driver_rule.yaml.j2",
          description: "Set initial driver_info if not defined on node"
        }
        - {
          name: "Deploy Image Rule",
          template: "../templates/ironic_deploy_image_rule.yaml.j2",
          description: "Set initial instance_info if not defined on node"
        }

    - name: Setting up VirtualBMC in virtualenv
      become: no
      pip:
        virtualenv: "{{ systemuserhome }}/.venv/vbmc"
        virtualenv_site_packages: yes
        name: virtualbmc
        version: 1.2.0
      when: infra_master_running_kvm

    - name: Setting up Flask in virtualenv
      become: no
      pip:
        virtualenv: "{{ systemuserhome }}/.venv/flask"
        name:
          - flask
          - apscheduler
          - git+https://github.com/obourdon/shade
          - flask_httpauth

    - name: Copying Register Helper Python Code
      copy:
        src: ../files/register_helper.py
        dest: "{{ systemuserhome }}/register_helper.py"
        owner: "{{ systemuser }}"
        group: "{{ systemuser }}"
        mode: 0755

    - name: Copying Register Helper Launcher
      template:
        src: ../templates/register-helper.sh.j2
        dest: /usr/local/bin/register-helper.sh
        owner: root
        group: root
        mode: 0755

    - name: Copying Register Helper Service Config File
      copy:
        src: ../files/register-helper.service
        dest: /lib/systemd/system/register-helper.service
        owner: root
        group: root
        mode: 0644
      notify: Restarting Register Helper Service

    - include_tasks: ../tasks/store_facts.yml facts_file="opennext_infra_master_post_deploy_bifrost"

    - meta: flush_handlers

  handlers:

    - name: Activating Register Helper Service
      command: systemctl enable register-helper.service
      listen: "Restarting Register Helper Service"

    - name: Running Register Helper Service
      command: systemctl start register-helper.service
      listen: "Restarting Register Helper Service"
