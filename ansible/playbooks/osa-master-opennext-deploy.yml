---
- hosts: osa-master
  become: yes

  tasks:

    - name: Setting Facts
      set_fact:
        root_ssh_dir: "{{ root_dot_ssh_dir | default('/root/.ssh') }}"
        dest_repo_dir: "{{ dest_github_repo_dir | default('/opt') }}"

    - name: Setting environment facts
      set_fact:
        proxy_env: {
          'http_proxy': "http://{{ proxy_host }}:{{ proxy_port | default(3128) }}",
          'https_proxy': "http://{{ proxy_host }}:{{ proxy_port | default(3128) }}",
          'ftp_proxy': "http://{{ proxy_host }}:{{ proxy_port | default(3128) }}",
          'no_proxy': 'localhost,127.0.0.1',
        }
      when: proxy_host is defined

    - name: Retrieving OSA GitHub Repository
      git:
        repo: "https://github.com/obourdon/openstack-ansible"
        dest: "{{ dest_repo_dir }}/openstack-ansible"
        accept_hostkey: yes
        force: yes
        recursive: no
        version: stable/pike
      environment: "{{ proxy_env | default('{}') }}"

    - include_tasks: ../tasks/clone_private_git_repo.yml
      vars:
        repo: "{{ item.repo }}"
        repodst: "{{ item.get('repodst', '') }}"
        sshdir: "{{ root_ssh_dir }}"
        destdir: "{{ dest_repo_dir }}"
        gitenv:
          TMPDIR: "/var/tmp"
      with_items:
        - { repo: "onpc-basic-model" }
        - { repo: "onpc-monitoring" }

    - name: Boostrapping Ansible for OSA
      command: "./scripts/bootstrap-ansible.sh"
      args:
        chdir: "/opt/openstack-ansible"
        creates: "/opt/ansible-runtime/bin/ansible-playbook"
      environment: "{{ proxy_env | default('{}') | combine({ 'TMPDIR': '/var/tmp' }) }}"
      register: bootstrap_ansible_result

    - name: Boostrapping AIO for OSA
      command: "./scripts/bootstrap-aio.sh"
      args:
        chdir: "/opt/openstack-ansible"
        creates: "/etc/openstack_deploy/user_variables.yml"
        # Could also be /etc/network/interfaces.d/osa_interfaces.cfg
      environment: "{{ proxy_env | default('{}') | combine({ 'TMPDIR': '/var/tmp', 'BOOTSTRAP_OPTS': 'bootstrap_host_data_disk_device=vdb' }) }}"
      register: bootstrap_aio_result
      when: hostvars.get('infra-master', {}).get('groups', {}).get('osa-vms', []) | length == 1
      # Could also be osa-master instead of infra-master

    - name: Setting facts for OSA user configuration file
      set_fact:
        osa_user_conf_file: "/etc/openstack_deploy/user_variables.yml"
        osa_vars_additions: "{%- raw %}{{ lookup('template', '../templates/osa_additional_user_variables.yml.j2') }}{%- endraw %}"

    - name: Retrieving remote OSA user configuration
      slurp:
        src: "{{ osa_user_conf_file }}"
      register:
        osa_user_info

    - name: Adding proxy variables to /etc/openstack_deploy/user_variables.yml
      lineinfile:
        path: "{{ osa_user_conf_file }}"
        line: "{{ osa_vars_additions }}"
        state: present
        owner: root
        group: root
        mode: 0644
      when: not (osa_user_info['content'] | b64decode is search ('deployment_environment_variables'))

    - name: Adding OSA final deployment script
      copy:
        src: ../files/osa_run_playbooks.sh
        dest: /opt/osa_run_playbooks.sh
        owner: root
        group: root
        mode: 0755

    - name: Executing OSA final deployment script
      shell: /opt/osa_run_playbooks.sh
      args:
        creates: /opt/.osa_playbooks_done
        executable: /bin/bash
