# AIO VM provisioning
---
- hosts: infra-master
  become: no

  vars_files:
    - ../vars/infra-master-configure-system_vars.yml
    - ../vars/infra-master-deploy-bifrost_vars.yml

  tasks:

    - import_tasks: ../tasks/operational_informations.yml

- hosts: kvm-master
  become: no

  tasks:

    - name: Retrieving infra-master inventory_hostname
      set_fact:
        infra_hostname: "{{ hostvars[inventory_hostname]['groups']['infra-master'][0] }}"

    - name: Retrieving infra-master facts
      set_fact:
        br_prov_ip: "{{ hostvars[infra_hostname]['br_prov_ip'] }}"
        vbmc_venv: "{{ hostvars[infra_hostname].get('vbmc_venv', {}) }}"
        registration_uri: "{{ hostvars[infra_hostname].get('registration_uri') }}"
        registration_ip: "{{ hostvars[infra_hostname].get('registration_ip') }}"
        registration_port: "{{ hostvars[infra_hostname].get('registration_port') }}"
        status_uri: "{{ hostvars[infra_hostname].get('status_uri') }}"
        clouds: "{{ hostvars[infra_hostname].get('clouds', {}) }}"
        ansible_master_running_kvm: "{{ hostvars[infra_hostname]['ansible_local']['opennext_infra_master_configure_system'][infra_hostname].get('ansible_master_running_kvm', false) }}"

    - name: Retrieving infra-master facts
      set_fact:
        vbmc_ip: "{{ hostvars[inventory_hostname].ansible_br_prov.ipv4.address }}"
      when: ansible_master_running_kvm

    - include_tasks: ../tasks/kvm_vm_create.yml
      vars:
        vmname: "{{ vm_item.name }}"
        vmcpus: "{{ vm_item.cpus }}"
        vmmemorysizegb: "{{ vm_item.mem }}"
        vmdisksnb: "{{ vm_item.disks | default(1) }}"
        vmdisksizegb: "{{ vm_item.hdd }}"
        vncport: "{{ vm_item.vnc }}"
        vbmc_port: "{{ vm_item.bmc }}"
        vmmacprefix: "52:54:00"
        roles: "{{ vm_item.roles }}"
      with_items:
        - {
          name: "aio1",
          cpus: "{{ aio_cpus | default(10) | int }}",
          mem: "{{ aio_mem | default(48) | int }}",
          disks: "{{ aio_disks | default(2) | int }}",
          hdd: "{{ aio_disk_size | default(500) | int }}",
          vnc: 5901,
          bmc: 6001,
          roles: ['control', 'compute', 'storage'],
        }
      loop_control:
        loop_var: vm_item

- hosts: infra-master
  become: no

  vars_files:
    - ../vars/infra-master-configure-system_vars.yml
    - ../vars/infra-master-deploy-bifrost_vars.yml

  tasks:

    - import_tasks: ../tasks/nodes_get_status.yml

    - name: Extracting VMs names from facts
      set_fact:
        node_infos_init: "{{ hostvars[inventory_hostname].registered_status.json }}"
        node_names: "{{ hostvars[inventory_hostname].registered_status.json | json_query('keys(@)') }}"
        node_ips: "{{ hostvars[inventory_hostname].registered_status.json | json_query('values(@)') | map(attribute='extra/all/interfaces/eth0/ip') | list }}"
        int_vip_addr: "{{ hostvars[inventory_hostname].ansible_br_mgmt.ipv4 }}"
        pub_addr: "{{ hostvars[inventory_hostname].ansible_br_prov.ipv4 }}"
        registered_status_init: "{{ registered_status }}"
        registered_machines_init: "{{ registered_machines }}"

    - name: Waiting for VMs to be reachable by SSH
      wait_for:
        connect_timeout: 10
        sleep: 60
        timeout: 3600
        port: 22
        host: '{{ item }}'
        search_regex: OpenSSH
      with_items: "{{ node_ips }}"

    - name: Creating OSA inventory file
      template:
        src: ../templates/inventory.cfg.j2
        dest: "{{ systemuserhome }}/osa-inventory"
      vars:
        # TODO next variables to be retrieved from facts
        infra_master_ip: "{{ hostvars[inventory_hostname].ansible_br_host.ipv4.address }}"
        osa_master_ip: "{{ hostvars[inventory_hostname].registered_status.json.get(node_names[0]).get('extra/all/interfaces/eth0/ip') }}"
        osa_nodes: "{{ node_names }}"
        bridge_itf: "{{ kvm_prov_bridge_itf }}"
        ext_pub_vip_addr: "{{ hostvars[inventory_hostname].registered_status.json.get(node_names[0]).get('extra/all/interfaces/eth0/ip') }}"
        int_pub_vip_itf: "br-mgmt"
        int_pub_vip_addr: "{{ (int_vip_addr['network'] ~ '/' ~ int_vip_addr['netmask']) | ipaddr('net') | ipaddr('100') }}"

    - import_tasks: ../tasks/nodes_get_status.yml

    - name: Extracting VMs names from facts
      set_fact:
        node_infos: "{{ hostvars[inventory_hostname].registered_status.json }}"

    - include_tasks: ../tasks/store_facts.yml facts_file="opennext_infra_master_create_osa_nodes"
      vars:
        keys_to_store:
          - "^node_infos.*$"
          - "^node_ips$"
          - "^node_names$"
          - "^registered_machines.*$"
          - "^registered_status.*$"
