---
- hosts: osa-vms
  become: yes

  vars_files:
    - ../vars/infra-master-configure-system_vars.yml
    - ../vars/infra-master-deploy-bifrost_vars.yml
    - ../vars/slaves-pkgs-ubuntu.yml

  tasks:

    - name: Setting facts
      set_fact:
        root_ssh_dir: "{{ root_dot_ssh_dir | default('/root/.ssh') }}"

    - name: Creating root .ssh
      file:
            path: "{{ root_ssh_dir }}"
            mode: 0700
            owner: "root"
            group: "root"
            state: directory

    - name: Configuring SSH defaults for {{ systemuser }}
      template:
        src: ../templates/ssh_cfg.j2
        dest: "{{ systemuserhome }}/.ssh/config"
        owner: "{{ systemuser }}"
        group: "{{ systemuser }}"
        mode: 0644

    - name: Configuring SSH defaults for root
      template:
        src: ../templates/ssh_cfg.j2
        dest: "{{ root_ssh_dir }}/config"
        owner: "root"
        group: "root"
        mode: 0644

    - name: Setting environment facts
      set_fact:
        proxy_env: {
          'http_proxy': "http://{{ proxy_host }}:{{ proxy_port | default(3128) }}",
          'https_proxy': "http://{{ proxy_host }}:{{ proxy_port | default(3128) }}",
          'ftp_proxy': "http://{{ proxy_host }}:{{ proxy_port | default(3128) }}",
          'no_proxy': 'localhost,127.0.0.1',
        }
      when: proxy_host is defined

    - name: Verifying all mandatory packages
      package:
        name: "{{ systempkgs | sort }}"
        state: latest
      environment: "{{ proxy_env | default('{}') }}"

    - include_tasks: ../tasks/kernel_drivers_modules.yml module={{ item }}
      with_items:
        - "bonding"
        - "bridge"
        - "br_netfilter"
        - "8021q"

    - name: Configuring IP forwarding via sysctl
      sysctl:
        name: "net.ipv4.ip_forward"
        value: 1
        sysctl_set: yes
        state: present
        reload: yes

    - name: Setting facts for NTP daemon configuration
      set_fact:
          ntp_daemon_conf_line: "server {{ proxy_host }}"
          ntp_daemon_conf_file: "/etc/ntp.conf"
          ntp_date_conf_line: "NTPSERVERS=\"{{ proxy_host }}\""
          ntp_date_conf_file: "/etc/default/ntpdate"

    - name: Configuring NTP daemon (removing default pools)
      replace:
        path: "{{ ntp_daemon_conf_file }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - { regexp: '^pool (.*)', line: '#pool \1' }
      notify:
        - restart ntp and stop systemd-timesyncd

    - name: Retrieving remote NTP daemon configuration
      slurp:
        src: "{{ ntp_daemon_conf_file }}"
      register:
        ntp_daemon_info

    - name: Configuring NTP daemon (inserting infra-master as NTP server)
      replace:
        path: "{{ ntp_daemon_conf_file }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - { regexp: '^(.*) ntp server as a fallback\.$', line: '# Custom ntp server list\n{{ ntp_daemon_conf_line }}\n\1 ntp server as a fallback.' }
      notify:
        - restart ntp and stop systemd-timesyncd
      when: not (ntp_daemon_info['content'] | b64decode is search (ntp_daemon_conf_line))

    - name: Retrieving remote NTP date configuration
      slurp:
        src: "{{ ntp_date_conf_file }}"
      register:
        ntp_date_info

    - name: Configuring NTP date (inserting infra-master as NTP server)
      replace:
        path: "{{ ntp_date_conf_file }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - { regexp: '^NTPSERVERS=".*', line: '{{ ntp_date_conf_line }}' }
      notify:
        - restart ntp and stop systemd-timesyncd
      when: not (ntp_date_info['content'] | b64decode is search (ntp_date_conf_line))

  handlers:
    - name: restart ntp and stop systemd-timesyncd
      service: name={{ item.name }} state={{ item.state }}
      with_items:
        - { name: ntp, state: restarted }
        - { name: systemd-timesyncd, state: stopped }
