# Tasks for configuring NTP
---
# Copyright (c) 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Setting fact for package query command (Ubuntu)
  set_fact:
    package_name: "chrony"
  when: is_host_to_be_modified

- name: Setting fact for package query command (Ubuntu)
  set_fact:
    package_query_cmd: "dpkg -l"
    package_query_match: "^ii *{{ package_name }} *"
  when: is_host_to_be_modified and ansible_distribution | lower == 'ubuntu'

- name: Setting fact for package query command (CentOS)
  set_fact:
    package_query_cmd: "rpm -q"
    package_query_match: "^{{ package_name }} *"
  when: is_host_to_be_modified and ansible_distribution | lower == 'centos'

- name: Checking if chrony is installed
  shell: "{{ package_query_cmd }} {{ package_name }}"
  args:
    warn: false
  register: check_chrony_package
  ignore_errors: true
  changed_when: false
  when: is_host_to_be_modified

- name: Setting fact for chrony usage vs ntp
  set_fact:
    use_chrony: "{{ check_chrony_package.failed == False and check_chrony_package.stdout_lines | select('match', package_query_match) | list | length > 0 }}"
  when: is_host_to_be_modified

- name: Setting facts for NTP daemon configuration
  set_fact:
    ntp_daemon_conf_file: "/etc/ntp.conf"
    ntp_date_conf_file: "/etc/default/ntpdate"
  when: is_host_to_be_modified

- name: Setting facts for NTP daemon configuration (Ubuntu,osa-nodes)
  set_fact:
    ntp_daemon_conf_line: "server {{ proxy_host }}"
    ntp_date_conf_line: "NTPSERVERS=\"{{ proxy_host }}\""
    ntp_patterns_to_comment:
      - { regexp: '^pool (.*)', line: '#pool \1' }
    ntp_anchor_patterns:
      - { regexp: '^(.*) ntp server as a fallback\.$', line: '# Custom ntp server list\nserver {{ proxy_host }}\n\1 ntp server as a fallback.' }
    ntp_service_handler: "restart ntp and stop systemd-timesyncd"
  when: is_host_to_be_modified and ansible_distribution | lower == 'ubuntu' and node_type == 'osa-nodes' and use_chrony == False

- name: Setting facts for NTP daemon configuration (Ubuntu,infra-master)
  set_fact:
    ntp_daemon_conf_line: "broadcast {{ ip_prefix | default('20.20.20') }}.{{ ip_netmask_broadcast | default(255) }}"
    ntp_anchor_patterns:
      - { regexp: '^#broadcast (.*)$', line: '#broadcast \1\nbroadcast {{ ip_prefix | default("20.20.20") }}.{{ ip_netmask_broadcast | default(255) }}' }
    ntp_service_handler: "restart ntp and stop systemd-timesyncd"
  when: is_host_to_be_modified and ansible_distribution | lower == 'ubuntu' and node_type == 'infra-master' and use_chrony == False

- name: Setting facts for NTP daemon configuration (CentOS,osa-nodes)
  set_fact:
    ntp_daemon_conf_line: "server {{ proxy_host }}"
  when: is_host_to_be_modified and ansible_distribution | lower == 'centos' and node_type == 'osa-nodes' and use_chrony == False

- name: Setting additional facts for NTP daemon configuration (CentOS,osa-nodes)
  set_fact:
    ntp_patterns_to_comment:
      - { regexp: '^server (.*.centos.pool.ntp.org.*)', line: '#server \1' }
    ntp_anchor_patterns:
      - { regexp: '^(.*) Hosts on local network are less restricted\.$', line: '# Custom ntp server list\n{{ ntp_daemon_conf_line }}\n\1 Hosts on local network are less restricted.' }
    ntp_service_handler: "restart ntpd"
  when: is_host_to_be_modified and ansible_distribution | lower == 'centos' and node_type == 'osa-nodes' and use_chrony == False

- name: Setting facts for chrony daemon configuration (Ubuntu,osa-nodes)
  set_fact:
    chrony_service_name: "chrony"
    chrony_daemon_conf_file: "/etc/chrony/chrony.conf"
    chrony_patterns_to_comment: []
    chrony_daemon_conf_line: "server {{ proxy_host }} .*"
    ntp_date_conf_line: "NTPSERVERS=\"{{ proxy_host }}\""
    chrony_anchor_patterns:
      - { regexp: '^pool (\S*) (.*)$', line: '# Custom ntp server list\nserver {{ proxy_host }} iburst\nmakestep 1 -1\n\n#pool \1 \2' }
    chrony_service_handler: "restart chrony and stop systemd-timesyncd"
  when: is_host_to_be_modified and ansible_distribution | lower == 'ubuntu' and node_type == 'osa-nodes' and use_chrony == True

- name: Setting facts for chrony daemon configuration (Ubuntu,infra-master)
  set_fact:
    chrony_service_name: "chrony"
    chrony_daemon_conf_file: "/etc/chrony/chrony.conf"
    chrony_daemon_conf_line: "allow {{ ip_prefix | default('20.20.20') }}.0/{{ ip_netmask_bits | default(24) }}"
    chrony_anchor_patterns:
      - { regexp: '^#allow foo.example.net$', line: 'allow {{ ip_prefix | default("20.20.20") }}.0/{{ ip_netmask_bits | default(24) }}\nmakestep 1 -1\n#allow foo.example.net' }
    chrony_service_handler: "restart chrony and stop systemd-timesyncd"
  when: is_host_to_be_modified and ansible_distribution | lower == 'ubuntu' and node_type == 'infra-master' and use_chrony == True

- name: Setting facts for chrony daemon configuration (CentOS,osa-nodes)
  set_fact:
    chrony_service_name: "chronyd"
    chrony_daemon_conf_file: "/etc/chrony.conf"
    chrony_patterns_to_comment:
      - { regexp: '^server (.*.centos.pool.ntp.org.*)', line: '#server \1' }
    chrony_daemon_conf_line: "server {{ proxy_host }} .*"
    chrony_anchor_patterns:
      - { regexp: '^# Use public servers (.*)$', line: 'server {{ proxy_host }} iburst\n\n# Use public servers \1' }
    chrony_service_handler: "restart chrony"
  when: is_host_to_be_modified and ansible_distribution | lower == 'centos' and node_type == 'osa-nodes' and use_chrony == True

- name: Configuring NTP daemon (removing default pools and servers)
  replace:
    path: "{{ ntp_daemon_conf_file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ ntp_patterns_to_comment }}"
  notify:
    - "{{ ntp_service_handler }}"
  when: is_host_to_be_modified and node_type == 'osa-nodes' and use_chrony == False

- name: Retrieving remote NTP daemon configuration
  slurp:
    src: "{{ ntp_daemon_conf_file }}"
  register:
    ntp_daemon_info
  when: is_host_to_be_modified and use_chrony == False

- name: Configuring chrony daemon (removing default pools and servers)
  replace:
    path: "{{ chrony_daemon_conf_file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ chrony_patterns_to_comment }}"
  notify:
    - "{{ chrony_service_handler }}"
  when: is_host_to_be_modified and node_type == 'osa-nodes' and use_chrony == True

- name: Retrieving remote chrony daemon configuration
  slurp:
    src: "{{ chrony_daemon_conf_file }}"
  register:
    chrony_daemon_info
  when: is_host_to_be_modified and use_chrony == True

- name: Configuring NTP daemon
  replace:
    path: "{{ ntp_daemon_conf_file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ ntp_anchor_patterns }}"
  register: ntp_server_reconfig
  notify:
    - "{{ ntp_service_handler }}"
  when: (is_host_to_be_modified and
    use_chrony == False and
    not (ntp_daemon_info['content'] | b64decode is search (ntp_daemon_conf_line)))

- name: Configuring chrony daemon
  replace:
    path: "{{ chrony_daemon_conf_file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ chrony_anchor_patterns }}"
  register: chrony_server_reconfig
  notify:
    - "{{ chrony_service_handler }}"
  when: (is_host_to_be_modified and
    use_chrony == True and
    not (chrony_daemon_info['content'] | b64decode is search (chrony_daemon_conf_line)))

- name: Retrieving remote NTP date configuration
  slurp:
    src: "{{ ntp_date_conf_file }}"
  register: ntp_date_info
  when: is_host_to_be_modified and ansible_distribution | lower == 'ubuntu'

- name: Configuring NTP date (inserting infra-master as NTP server)
  replace:
    path: "{{ ntp_date_conf_file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { regexp: '^NTPSERVERS=".*', line: '{{ ntp_date_conf_line }}' }
  notify:
    - "{{ ntp_service_handler | default(chrony_service_handler) }}"
  when: (is_host_to_be_modified and
    ansible_distribution | lower == 'ubuntu' and
    node_type == 'osa-nodes' and
    not (ntp_date_info['content'] | b64decode is search (ntp_date_conf_line)))

- name: Restarting NTP Service
  service: name=ntp enabled=yes state=restarted
  when: is_host_to_be_modified and ntp_server_reconfig is changed and use_chrony == False

- name: Restarting chrony Service
  service: name="{{ chrony_service_name }}" enabled=yes state=restarted
  when: is_host_to_be_modified and chrony_server_reconfig is changed and use_chrony == True
